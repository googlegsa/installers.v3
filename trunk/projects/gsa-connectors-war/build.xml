<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2010 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http:www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- Author: Darshan Jawalebhoi -->

<!--
 Builds a single connector manager WAR file for multiple connectors.
 The connectors currently bundled are:
      1. Sharepoint connector
      2. File system connector
      2. LDAP connector
-->
<project name="gsa-connectors-war" default="build-all" basedir=".">
  <property file="build.properties" />
  <property name="build-dir" value="build" />
  <property name="third-party-dir" value="${build-dir}/third-party" />
  <property name="downloads-dir" value="${third-party-dir}/downloads" />
  <property name="deliverables" value="${build-dir}/deliverables" />
  <property name="war-exploded" value="${deliverables}/war-exploded" />
  <property name="fs-jar-exploded-dir" value="${deliverables}/war-exploded/fs-jar-exploded" />

  <target name="clean">
    <delete dir="${build-dir}" />
  </target>

  <target name="init" depends="clean">
    <mkdir dir="${build-dir}" />
    <mkdir dir="${downloads-dir}" />
    <mkdir dir="${war-exploded}" />
    <mkdir dir="${fs-jar-exploded-dir}" />
  </target>

  <target name="fetch-third-party"
          description="Download the third-party components.">
    <get src="${connector.manager.download-url}" 
         dest="${downloads-dir}/${connector.manager.filename}"/>
    <get src="${connector.sharepoint.download-url}" 
         dest="${downloads-dir}/${connector.sharepoint.filename}"/>
    <get src="${connector.filesystem.download-url}" 
         dest="${downloads-dir}/${connector.filesystem.filename}"/>
    <get src="${connector.ldap.download-url}" 
         dest="${downloads-dir}/${connector.ldap.filename}"/>
  </target>

  <target name="assemble-web-app"
          description="Construct web application directory.">
    <!-- Extract the CM WAR file, unpack it, and extract the connector
         JAR files into the unpacked WAR directory. -->
    <unzip dest="${third-party-dir}">
      <fileset dir="${downloads-dir}" includes="connector-manager-*.zip" />
      <patternset includes="**/connector-manager.war" />
      <mapper type="flatten" />
    </unzip>
    <unwar dest="${war-exploded}">
      <fileset dir="${third-party-dir}" includes="connector-manager.war" />
    </unwar>
    <unzip dest="${war-exploded}/WEB-INF/lib">
      <fileset dir="${downloads-dir}" includes="*.zip" />
      <patternset includes="**/*.jar" />
      <mapper type="flatten" />
    </unzip>

    <mkdir dir="${war-exploded}/WEB-INF/classes" />
  </target>

  <!-- war-offboard must come first because war-onboard uses and
       overwrites the same ${war-exploded} directory. -->
  <target name="build-all"
          depends="init,fetch-third-party,assemble-web-app,war-offboard,war-onboard"
          description="Build WAR files from scratch. Default target.">
  </target>

  <target name="onboard-specific">
    <!-- include corresponding config files -->
    <copy todir="${war-exploded}/WEB-INF/classes" file="config/onboard/logging.properties" />
    <!-- Lock down the manager. -->
    <replace file="${war-exploded}/WEB-INF/applicationContext.properties" token="manager.locked=false" value="manager.locked=true">
    </replace>
    <concat append="true" destfile="${war-exploded}/WEB-INF/applicationContext.properties">manager.onboard=true${line.separator}</concat>
    <concat append="true" destfile="${war-exploded}/WEB-INF/applicationContext.properties">feed.contenturl.prefix=http://localhost:7886/connector-manager/getDocumentContent${line.separator}</concat>
    <!-- Workaround for IPv6 issue. -->
    <concat append="true" destfile="${war-exploded}/WEB-INF/applicationContext.properties">retriever.allowedHosts=::1,127.0.0.1${line.separator}</concat>
    <!-- This section does following things
      1. Unjars the connector-filesystem.jar file in the specified folder.
      2. Removes the entry for the java file system entry from the connectorDefaults.xml
      3. Creates the jar back
      4. Deletes the folder where we exploded the jar.
    These steps are required because we don't want to ship fs connector with
    unix file system crawling because that doesn't make sense for onboard connector.
    If the 'replace' command fails, you are trying to use old version of file system connector.
    Please change the build.properties to mention correct version.     -->
    <unzip src="${war-exploded}/WEB-INF/lib/connector-filesystem.jar" dest="${fs-jar-exploded-dir}"></unzip>
    <replace file="${fs-jar-exploded-dir}/config/connectorDefaults.xml" 
             token="&lt;ref bean=&#34;java-file-system-type&#34; /&gt;"
             value="">
    </replace>
    <replace file="${fs-jar-exploded-dir}/config/connectorType.xml" 
             token="&lt;ref bean=&#34;java-file-system-type&#34; /&gt;"
             value="">
    </replace>
    <replace file="${fs-jar-exploded-dir}/config/connectorDefaults.xml" 
             token="&lt;ref bean=&#34;windows-file-system-type&#34; /&gt;"
             value="">
    </replace>
    <replace file="${fs-jar-exploded-dir}/config/connectorType.xml" 
             token="&lt;ref bean=&#34;windows-file-system-type&#34; /&gt;"
             value="">
    </replace>
    <delete file="${war-exploded}/WEB-INF/lib/connector-filesystem.jar"/>
    <zip destfile="${war-exploded}/WEB-INF/lib/connector-filesystem.jar" basedir="${fs-jar-exploded-dir}"></zip>
    <delete dir= "${fs-jar-exploded-dir}"/>
  </target>

  <target name="offboard-specific">
  <!-- include corresponding config files -->
    <copy todir="${war-exploded}/WEB-INF/classes" file="config/offboard/logging.properties" />
    <!-- Unlock the manager. -->
    <replace file="${war-exploded}/WEB-INF/applicationContext.properties" token="manager.locked=true" value="manager.locked=false">
    </replace>
  </target>

  <target name="war-offboard" depends="offboard-specific"
          description="Build GSA Connectors WAR off-board.">
    <war destfile="${deliverables}/gsa-connectors-offboard.war" basedir="${war-exploded}">
      <!-- TODO: Add Manifest details -->
    </war>
  </target>

  <target name="war-onboard" depends="onboard-specific"
          description="Build GSA Connectors WAR on-board.">
    <war destfile="${deliverables}/gsa-connectors-onboard.war" basedir="${war-exploded}">
      <!-- TODO: Add Manifest details -->
    </war>
  </target>
</project>
