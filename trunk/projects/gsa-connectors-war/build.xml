<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright (C) 2010 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http:www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- Author: Darshan Jawalebhoi -->

<!--
 This is a ANT build script to generate the a single connector manager WAR
 for multiple connectors. The connectors currently bundled are:
      1. Sharepoint Connector
      2. File Systems Connector
-->
<project name="gsa-connectors-war" default="build-all" basedir=".">
  <property file="build.properties" />
  <property name="build-dir" value="build" />
  <property name="third-party-dir" value="${build-dir}/third-party" />
  <property name="downloads-dir" value="${third-party-dir}/downloads" />
  <property name="deliverables" value="${build-dir}/deliverables" />
  <property name="war-exploded" value="${deliverables}/war-exploded" />
  <property name="fs-jar-exploded-dir" value="${deliverables}/war-exploded/fs-jar-exploded" />

  <!-- Initialize -->
  <target name="clean">
    <delete dir="${build-dir}" />
  </target>
  <target name="init" depends="clean">
    <mkdir dir="${build-dir}" />
    <mkdir dir="${downloads-dir}" />
    <mkdir dir="${war-exploded}" />
    <mkdir dir="${fs-jar-exploded-dir}" />
  </target>

  <!-- Download and extract thrid party components -->
  <target name="fetch-third-party" depends="fetch-connector-manager,fetch-connector-sharepoint,fetch-connector-filesystem,fetch-connector-ldap" />
  <target name="fetch-connector-manager">
    <get dest="${downloads-dir}/connector-manager.zip" src="${connector.manager.download-url}">
    </get>
    <unzip dest="${third-party-dir}" src="${downloads-dir}/connector-manager.zip" overwrite="true">
    </unzip>
  </target>
  <target name="fetch-connector-sharepoint">
    <get dest="${downloads-dir}/connector-sharepoint.zip" src="${connector.sharepoint.download-url}">
    </get>
    <unzip dest="${third-party-dir}" src="${downloads-dir}/connector-sharepoint.zip" overwrite="true">
    </unzip>
  </target>
  <target name="fetch-connector-filesystem">
    <get dest="${downloads-dir}/connector-filesystem.zip" src="${connector.filesystem.download-url}">
    </get>
    <unzip dest="${third-party-dir}/connector-filesystem-${dot-version-fs}" src="${downloads-dir}/connector-filesystem.zip" overwrite="true">
    </unzip>
  </target>
  <target name="fetch-connector-ldap">
    <get dest="${downloads-dir}/connector-ldap.jar" src="${connector.ldap.download-url}">
    </get>
    <copy todir="${third-party-dir}/connector-ldap-${dot-version-ldap}" file="${downloads-dir}/connector-ldap.jar" overwrite="true">
    </copy>
  </target>

  <!-- Construct WAR -->
  <target name="assemble-web-app" depends="">
    <unwar src="${third-party-dir}/connector-manager-${dot-version-cm}/connector-manager.war" dest="${war-exploded}">
    </unwar>

    <!-- Place SharePoint Connector components in the WAR file. -->
    <copy todir="${war-exploded}/WEB-INF/lib" file="${third-party-dir}/connector-sharepoint.jar" />
    <copy todir="${war-exploded}/WEB-INF/lib" flatten="true">
      <fileset dir="${third-party-dir}/lib">
      </fileset>
    </copy>
    <mkdir dir="${war-exploded}/WEB-INF/classes" />

    <!-- Place FileSystem Connector components in the WAR file. -->
    <copy todir="${war-exploded}/WEB-INF/lib" file="${third-party-dir}/connector-filesystem-${dot-version-fs}/connector-filesystem.jar" />
    <copy todir="${war-exploded}/WEB-INF/lib" flatten="true">
      <fileset dir="${third-party-dir}/connector-filesystem-${dot-version-fs}/Lib">
      </fileset>
    </copy>

    <!-- Place LDAP Connector components in the WAR file. -->
    <copy todir="${war-exploded}/WEB-INF/lib" file="${third-party-dir}/connector-ldap-${dot-version-ldap}/connector-ldap.jar" />
  </target>

  <target name="build-all" depends="clean,init,fetch-third-party,assemble-web-app,war-offboard,war-onboard">
  </target>

  <target name="onboard-specific">
    <!-- include corrsponding config files -->
    <copy todir="${war-exploded}/WEB-INF/classes" file="config/onboard/logging.properties" />
    <!-- Lock down the manager. -->
    <replace file="${war-exploded}/WEB-INF/applicationContext.properties" token="manager.locked=false" value="manager.locked=true">
    </replace>
    <concat append="true" destfile="${war-exploded}/WEB-INF/applicationContext.properties">${onboard-flag}=true</concat>
    <!-- This section does following things
      1. Unjars the connector-filesystem.jar file in the specified folder.
      2. Removes the entry for the java file system entry from the connectorDefaults.xml
      3. Creates the jar back
      4. Deletes the folder where we exploded the jar.
    These steps are required because we don't want to ship fs connector with
    unix file system crawling because that doesn't make sense for onboard connector.
    If the 'replace' command fails, you are trying to use old version of file system connector.
    Please change the build.properties to mention correct version.     -->
    <unjar src="${war-exploded}/WEB-INF/lib/connector-filesystem.jar" dest="${fs-jar-exploded-dir}"></unjar>
    <replace file="${fs-jar-exploded-dir}/config/connectorDefaults.xml" 
             token="&lt;ref bean=&#34;java-file-system-type&#34; /&gt;"
             value="">
    </replace>
    <delete file="${war-exploded}/WEB-INF/lib/connector-filesystem.jar"/>
    <jar destfile="${war-exploded}/WEB-INF/lib/connector-filesystem.jar" basedir="${fs-jar-exploded-dir}"></jar>
    <delete dir= "${fs-jar-exploded-dir}"/>
  </target>

  <target name="offboard-specific">
  <!-- include corrsponding config files -->
    <copy todir="${war-exploded}/WEB-INF/classes" file="config/offboard/logging.properties" />
    <!-- Unlock the manager. -->
    <replace file="${war-exploded}/WEB-INF/applicationContext.properties" token="manager.locked=true" value="manager.locked=false">
    </replace>
  </target>

  <!-- Build GSA Connectors WAR off-board -->
  <target name="war-offboard" depends="offboard-specific">
    <war destfile="${deliverables}/gsa-connectors-offboard.war" basedir="${war-exploded}">
      <!-- TODO: Add Manifest details -->
    </war>
  </target>

  <!-- Build GSA Connectors WAR on-board -->
  <target name="war-onboard" depends="onboard-specific">
    <war destfile="${deliverables}/gsa-connectors-onboard.war" basedir="${war-exploded}">
    <!-- TODO: Add Manifest details -->
    </war>
  </target>
</project>
